[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "codesentinel-ai"
version = "0.1.0"
description = "AI-powered source code vulnerability scanning system"
authors = ["ccnochch <549464609@qq.com>"]
readme = "README.md"
packages = [{include = "codesentinel", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
# 核心框架
langchain = "^0.1.0"
langgraph = "^0.0.40"
# 数据存储
chromadb = "^0.4.15"
# Web框架
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
# 任务队列
celery = "^5.3.4"
redis = "^5.0.1"
# 代码分析
tree-sitter = "^0.20.2"
# AI模型集成
openai = "^1.3.0"
anthropic = "^0.7.0"
transformers = "^4.35.0"
# 安全工具
pip-audit = "^2.6.0"
safety = "^2.3.5"
bandit = "^1.7.5"
# 日志和监控
structlog = "^23.2.0"
prometheus-client = "^0.19.0"
# 数据处理
pandas = "^2.1.0"
numpy = "^1.25.0"
# 配置管理
pydantic = "^2.5.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
# 代码质量工具
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
ruff = "^0.1.6"
# 测试框架
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.12.0"
# 开发工具
pre-commit = "^3.5.0"
ipython = "^8.17.0"
jupyter = "^1.0.0"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["codesentinel"]
known_third_party = ["fastapi", "langchain", "chromadb"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tree_sitter.*",
    "chromadb.*",
    "langchain.*",
    "langgraph.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/codesentinel",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-v"
]
asyncio_mode = "auto"

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]
line-length = 88
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.coverage.run]
source = ["src/codesentinel"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]